# history
HISTSIZE=10000
SAVEHIST=100000
HISTFILE=~/.zsh_history
setopt INC_APPEND_HISTORY
setopt EXTENDED_HISTORY
setopt HIST_IGNORE_DUPS
setopt HIST_FIND_NO_DUPS
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_REDUCE_BLANKS
setopt HIST_IGNORE_SPACE
setopt HIST_NO_STORE
setopt CORRECT

bindkey '^[[A' up-line-or-search
bindkey '^[[B' down-line-or-search

# editing
bindkey -e
autoload -U select-word-style
select-word-style bash

# completion
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*' menu select=2
zstyle :compinstall filename "$HOME/.zshrc"

# personal completion
fpath=(~/.zsh/completion $fpath)

# personal path
path+=("$HOME/bin")
export PATH

autoload -Uz compinit && compinit

setopt auto_menu

# editor
if type vim &>/dev/null; then
    export EDITOR=vim
else
    export EDITOR=vi
fi

# ls
case $(uname) in
    Darwin)
        export CLICOLOR_FORCE=1
        alias _ls="ls -bCFh"
        ;;

    Linux)
        alias _ls="ls --color=always -bCFh"
        ;;
esac

if [[ $(type -w _ls) == "_ls: function" ]]; then
    alias ls="_ls"
    alias ll="_ls -l"
    alias la="_ls -la"
fi

# less
export LESS="-FRXi"

# lesspipe
if type lesspipe &>/dev/null; then
    eval $(lesspipe) &>/dev/null
elif type lesspipe.sh &>/dev/null; then
    export LESSOPEN="| $(brew --prefix)/bin/lesspipe.sh %s"
    export LESS_ADVANCED_PREPROCESSOR=1
elif type src-hilite-lesspipe.sh &>/dev/null; then
    export LESSOPEN="| src-hilite-lesspipe.sh %s"
elif [[ -f /usr/share/source-highlight/src-hilite-lesspipe.sh ]]; then
    export LESSOPEN="| /usr/share/source-highlight/src-hilite-lesspipe.sh %s"
fi

# man
man() {
    env \
    LESS_TERMCAP_mb=$(printf "\e[1;31m") \
    LESS_TERMCAP_md=$(printf "\e[1;31m") \
    LESS_TERMCAP_me=$(printf "\e[0m") \
    LESS_TERMCAP_se=$(printf "\e[0m") \
    LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
    LESS_TERMCAP_ue=$(printf "\e[0m") \
    LESS_TERMCAP_us=$(printf "\e[1;32m") \
    man "$@"
}

# screen
alias scr="screen -d -RR"

# prompt

if [[ $TERM == "screen" ]]; then
    _GET_PATH='echo $PWD | sed "s/^\/Users\//~/;s/^~$USER/~/"'
    TAB_TITLE_PREFIX='"`'$_GET_PATH' | sed "s:..*/::"`$PROMPT_CHAR"'

    function preexec()
    {
        local -a cmd=(${(z)1})
        print -nR $'\033k'$cmd[1]:t$'\033'\\\
    }

    function precmd()
    {
        eval "tab_title=\"$TAB_TITLE_PREFIX|$SHELL:t\""
        print -nR $'\033k'$tab_title$'\033'\\\
    }
fi

# colors
autoload -U colors && colors
PROMPT="%{$fg[red]%}%m%{$reset_color%}:%{$fg[blue]%}%~%{$reset_color%} %# "

# vcs info
autoload -Uz vcs_info
precmd_vcs_info() { vcs_info }
precmd_functions+=( precmd_vcs_info )
setopt prompt_subst
RPROMPT=\$vcs_info_msg_0_
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' get-revision true
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:*' formats '[%b]%u%c-'
zstyle ':vcs_info:*' actionformats '[%b|%a]%u%c-'

# direnv
if type direnv &>/dev/null; then
    eval "$(direnv hook zsh)"
    export DIRENV_LOG_FORMAT=
fi

# fzf
if type fzf &>/dev/null && type fdfind &>/dev/null && [[ $- == *i* ]]; then
    case $(uname) in
        Darwin)
            eval "$(fzf --zsh)"
            ;;

        Linux)
            . /usr/share/doc/fzf/examples/completion.zsh
            . /usr/share/doc/fzf/examples/key-bindings.zsh
            ;;
    esac
fi

# autojump
case $(uname) in
    Darwin)
        [[ -f $(brew --prefix)/etc/profile.d/autojump.sh ]] \
            && . $(brew --prefix)/etc/profile.d/autojump.sh
        ;;

    Linux)
        [[ -f /usr/share/autojump/autojump.sh ]] \
            && . /usr/share/autojump/autojump.sh
        ;;
esac

# completion

# completion for homebrew software
if type brew &>/dev/null; then
    # completion for homebrew zsh
    fpath=($(brew --prefix)/share/zsh-completions $fpath)
    fpath=($(brew --prefix)/share/zsh/site-functions $fpath)
fi

# sets completion for a command the same as another (https://unix.stackexchange.com/questions/496379/treat-command-like-another-for-completion-purposes)
compdefas () {
  if (($+_comps[$1])); then
    compdef $_comps[$1] ${^@[2,-1]}=$1
  fi
}

# autocompletes mvnd as if it were mvn
type mvnd &>/dev/null && compdefas mvn mvnd

# autosuggestions
case $(uname) in
    Darwin)
        if [[ -f $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]]; then
            ZSH_AUTOSUGGEST_STRATEGY=(history)
            . $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh
        fi

        ;;
esac

# zsh syntax highlighting
case $(uname) in
    Darwin)
        source $(brew --prefix)/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

        ;;
esac

# sources local zshrc
[[ -f ~/.zsh/zshrc-local.zsh ]] && . ~/.zsh/zshrc-local.zsh

# cd home
cd
